<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/TAN/Documents/VETTEC/Classes/Capstone/Mine/Data set/NEEDDD/just downloads/SQL/Myproject2023try2.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="browser pragmas query structure" current="2"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="2860"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,61:mainState annual personal income, population, per capita personal"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Per capita personal consumption expenditures (PCE) by major type of product" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="79"/><column index="2" value="153"/><column index="3" value="89"/><column index="4" value="300"/><column index="5" value="54"/><column index="6" value="54"/><column index="7" value="54"/><column index="8" value="54"/><column index="9" value="54"/><column index="10" value="54"/><column index="11" value="54"/><column index="12" value="54"/><column index="13" value="54"/><column index="14" value="54"/><column index="15" value="54"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Per capita personal consumption expenditures (PCE) by major type of product 1" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="79"/><column index="2" value="153"/><column index="3" value="89"/><column index="4" value="300"/><column index="5" value="54"/><column index="6" value="54"/><column index="7" value="54"/><column index="8" value="54"/><column index="9" value="54"/><column index="10" value="54"/><column index="11" value="54"/><column index="12" value="54"/><column index="13" value="54"/><column index="14" value="54"/><column index="15" value="54"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="SASUMMARY State annual summary statistics personal income, GDP, consumer spending" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="79"/><column index="2" value="153"/><column index="3" value="89"/><column index="4" value="300"/><column index="5" value="93"/><column index="6" value="93"/><column index="7" value="93"/><column index="8" value="93"/><column index="9" value="93"/><column index="10" value="93"/><column index="11" value="93"/><column index="12" value="93"/><column index="13" value="93"/><column index="14" value="93"/><column index="15" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="State annual personal income summary personal income, population, per capita personal" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="79"/><column index="2" value="153"/><column index="3" value="89"/><column index="4" value="289"/><column index="5" value="88"/><column index="6" value="102"/><column index="7" value="102"/><column index="8" value="88"/><column index="9" value="102"/><column index="10" value="102"/><column index="11" value="102"/><column index="12" value="102"/><column index="13" value="102"/><column index="14" value="102"/><column index="15" value="88"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="State annual personal income, population, per capita personal" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="79"/><column index="2" value="153"/><column index="3" value="89"/><column index="4" value="289"/><column index="5" value="88"/><column index="6" value="102"/><column index="7" value="102"/><column index="8" value="88"/><column index="9" value="102"/><column index="10" value="102"/><column index="11" value="102"/><column index="12" value="102"/><column index="13" value="102"/><column index="14" value="102"/><column index="15" value="88"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT *
FROM 
&quot;SASUMMARY State annual summary statistics personal income, GDP, consumer spending&quot; as s
WHERE
s.LineCode = 10 or s.LineCode = 11;

-- Execution finished without errors.
-- Result: 104 rows returned in 11ms

UPDATE &quot;SASUMMARY State annual summary statistics personal income, GDP, consumer spending&quot;
SET LineCode = 
    CASE 
        WHEN LineCode = 10 THEN 25
        WHEN LineCode = 11 THEN 26
        ELSE LineCode
    END
WHERE LineCode IN (10, 11);

-- Check the result with the select statement
SELECT *
FROM 
&quot;SASUMMARY State annual summary statistics personal income, GDP, consumer spending&quot;
WHERE
LineCode IN (25,26);

-- Result: 104 rows returned in 65ms

</sql><sql name="SQL 2">SELECT *
FROM 
&quot;State annual personal income, population, per capita personal&quot; as p
WHERE
p.LineCode in (1,2);

-- Execution finished without errors.
-- Result: 120 rows returned in 65ms
-- UPDATE those LineCode with new VALUES 28,29

UPDATE &quot;State annual personal income, population, per capita personal&quot;
SET LineCode = 
    CASE
        WHEN LineCode = 1 THEN 27
        WHEN LineCode = 2 THEN 28
        ELSE LineCode
    END
WHERE LineCode IN (1, 2);

-- Execution finished without errors.
-- Result: query executed successfully. Took 65ms, 120 rows affected

-- Check the result with the select statement
SELECT *
FROM 
&quot;State annual personal income, population, per capita personal&quot;
WHERE
LineCode IN (27, 28);

-- Result: 120 rows returned in 54ms
</sql><sql name="SQL 3">-- Check how many rows in the main file

SELECT *
FROM &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;;

-- Execution finished without errors.
-- Result: 1440 rows returned in 300ms

-- Check how many rows in the second file with our conditions

SELECT * 
FROM &quot;SASUMMARY State annual summary statistics personal income, GDP, consumer spending&quot;
WHERE LineCode in (25,26);

-- Execution finished without errors.
-- Result: 104 rows returned in 12ms

-- Create a copy of the main table just in case if something will go wrong.

CREATE TABLE percapita as SELECT * FROM &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;;

-- Execution finished without errors.
-- Result: query executed successfully.

-- Check how many rows in the copied table

SELECT * FROM &quot;percapita&quot;;

-- Execution finished without errors.
-- Result: 1440 rows returned in 312ms

-- Use the statement INSERT INTO SELECT to copies data from one table and inserts it into another table.

INSERT INTO &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot; as pce
(GeoFips, GeoName, LineCode, Description, &quot;2012&quot;, &quot;2013&quot;, &quot;2014&quot;, &quot;2015&quot;, &quot;2016&quot;, &quot;2017&quot;, &quot;2018&quot;, &quot;2019&quot;, &quot;2020&quot;, &quot;2021&quot;, &quot;2022&quot;)
SELECT 
GeoFips, GeoName, LineCode, Description, &quot;2012&quot;, &quot;2013&quot;, &quot;2014&quot;, &quot;2015&quot;, &quot;2016&quot;, &quot;2017&quot;, &quot;2018&quot;, &quot;2019&quot;, &quot;2020&quot;, &quot;2021&quot;, &quot;2022&quot;
From &quot;SASUMMARY State annual summary statistics personal income, GDP, consumer spending&quot; as percap
WHERE percap.LineCode in (25,26);

-- Execution finished without errors.
-- Result: query executed successfully. Took 1ms, 104 rows affected

-- Check how many rows in the main file NOW (after insert statement)

SELECT *
FROM &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;;


-- Execution finished without errors.
-- Result: 1544 rows returned in 297ms
--  1440 + 104 = 1544 Everything is right!
</sql><sql name="SQL 4">-- Check how many rows in the main file

SELECT *
FROM &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;;

-- Execution finished without errors.
-- Result: 1544 rows returned in 291ms

-- Check how many rows in the second file with our conditions

SELECT * 
FROM &quot;State annual personal income, population, per capita personal&quot;
WHERE LineCode in (27,28);

-- Execution finished without errors.
-- Result: 120 rows returned in 71ms

-- Create a copy of the main table just in case if something will go wrong.

CREATE TABLE percapita_with_sasummary 
as SELECT * FROM &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;;

-- Execution finished without errors.
-- Result: query executed successfully.

-- Check how many rows in the copied table

SELECT * FROM &quot;percapita_with_sasummary&quot;;

-- Execution finished without errors.
-- Result: 1544 rows returned in 425ms

-- Use the statement INSERT INTO SELECT to copies data from one table and inserts it into another table.

INSERT INTO &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot; as pce
(GeoFips, GeoName, LineCode, Description, &quot;2012&quot;, &quot;2013&quot;, &quot;2014&quot;, &quot;2015&quot;, &quot;2016&quot;, &quot;2017&quot;, &quot;2018&quot;, &quot;2019&quot;, &quot;2020&quot;, &quot;2021&quot;, &quot;2022&quot;)
SELECT 
GeoFips, GeoName, LineCode, Description, &quot;2012&quot;, &quot;2013&quot;, &quot;2014&quot;, &quot;2015&quot;, &quot;2016&quot;, &quot;2017&quot;, &quot;2018&quot;, &quot;2019&quot;, &quot;2020&quot;, &quot;2021&quot;, &quot;2022&quot;
From &quot;State annual personal income, population, per capita personal&quot; as perinc
WHERE perinc.LineCode in (27,28);

-- Execution finished without errors.
-- Result: query executed successfully. Took 0ms, 120 rows affected

-- Check how many rows in the main file NOW (after insert statement)

SELECT *
FROM &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;;


-- Execution finished without errors.
-- Result: 1664 rows returned in 362ms
--  1544 + 120 = 1664 Everything is right!
</sql><sql name="SQL 5">-- Check what are the names of the columns in the table
SELECT * 
FROM &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;;

-- Rename columns in a table (could not able to do it in one statement:
-- ALTER TABLE &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;
-- RENAME COLUMN GeoName to &quot;State&quot;,
-- RENAME COLUMN Description to &quot;Spending Categories&quot;;)
-- Execution finished with errors.
-- Result: near &quot;,&quot;: syntax error

ALTER TABLE &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;
RENAME COLUMN GeoName to &quot;State&quot;;
ALTER TABLE &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;
RENAME COLUMN Description to &quot;Spending Categories&quot;;

-- Check what are the names of the columns in the table
SELECT * 
FROM &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;;
</sql><sql name="SQL 6">-- Create a copy of the main table just in case if something will go wrong.

CREATE TABLE &quot;Per capita personal consumption expenditures (PCE) by major type of product2&quot;
as SELECT * FROM &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;;

SELECT * FROM 
&quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;;
-- Result: 1664 rows returned in 14ms

-- Remove in column &quot;State&quot; all entries that are not U.S. states (exception: United States and District of Columbia)
-- New England, Mideast, Great Lakes, Plains, Southeast, Southwest, Rocky Mountain, Far West 

-- Check how many rows in the table with our condition
SELECT *
FROM &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;
WHERE State in (&quot;New England&quot;, &quot;Mideast&quot;, &quot;Great Lakes&quot;, &quot;Plains&quot;, &quot;Southeast&quot;, &quot;Southwest&quot;, &quot;Rocky Mountain&quot;, &quot;Far West&quot;);

-- Execution finished without errors.
-- Result: 208 rows returned in 103ms

DELETE FROM &quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;
WHERE State in (&quot;New England&quot;, &quot;Mideast&quot;, &quot;Great Lakes&quot;, &quot;Plains&quot;, &quot;Southeast&quot;, &quot;Southwest&quot;, &quot;Rocky Mountain&quot;, &quot;Far West&quot;);

-- Result: query executed successfully. Took 1ms, 208 rows affected

SELECT * FROM 
&quot;Per capita personal consumption expenditures (PCE) by major type of product&quot;;
-- Result: 1456 rows returned in 304ms
-- 1664-208 = 1456. Right!
</sql><current_tab id="2"/></tab_sql></sqlb_project>
